<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<AssemblyName>Lidarr.Plugin.$(MSBuildProjectName)</AssemblyName>
		<AssemblyVersion>1.0.0.0</AssemblyVersion>
		<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="ILRepack.Lib.MSBuild.Task" Version="2.0.34.2">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Shard.DownloadAssistant" Version="1.0.8" />
		<PackageReference Include="Xabe.FFmpeg" Version="5.2.6" />
		<PackageReference Include="Xabe.FFmpeg.Downloader" Version="5.2.6" />
		<PackageReference Include="YouTubeMusicAPI" Version="2.1.1" />
	</ItemGroup>

	<ItemGroup>
		<AdditionalFiles Remove="..\stylecop.json" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Submodules\Lidarr\src\NzbDrone.Common\Lidarr.Common.csproj" />
		<ProjectReference Include="..\Submodules\Lidarr\src\NzbDrone.Core\Lidarr.Core.csproj" />
	</ItemGroup>

	<UsingTask TaskName="FetchOwnerFromFileTask" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<SourceFile ParameterType="System.String" Required="true" />
			<Owner ParameterType="System.String" Output="true" />
			<DebugCopyFileName ParameterType="System.String" Output="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
    try
    {
        var sourceCode = File.ReadAllText(SourceFile);

        var ownerRegex = new Regex(@"public\s+override\s+string\s+Owner\s*=>\s*@?""([^""]+)"";");
        var ownerMatch = ownerRegex.Match(sourceCode);

        if (ownerMatch.Success)
            Owner = ownerMatch.Groups[1].Value;
        else
            Log.LogError("Owner property not found in the source file.");

        var debugCopyFileNameRegex = new Regex(@"public\s+string\s+DebugCopyFileName\s*=>\s*@?""([^""]+)"";");
        var debugCopyFileNameMatch = debugCopyFileNameRegex.Match(sourceCode);

        if (debugCopyFileNameMatch.Success)
            DebugCopyFileName = debugCopyFileNameMatch.Groups[1].Value;
        else
            DebugCopyFileName = string.Empty;
    }
    catch (Exception ex)
    {
        Log.LogErrorFromException(ex);
    }
    ]]>
			</Code>
		</Task>
	</UsingTask>

	<Target Name="FetchOwner" BeforeTargets="PostBuild" Condition="'$(Configuration)' == 'Debug'">
		<FetchOwnerFromFileTask SourceFile="$(MSBuildProjectDirectory)\Plugin.cs">
			<Output TaskParameter="Owner" PropertyName="PluginOwner" />
			<Output TaskParameter="DebugCopyFileName" PropertyName="PluginDebugCopyFileName" />
		</FetchOwnerFromFileTask>
		<Message Text="Plugin Owner: $(PluginOwner)" Importance="high" />
		<Message Text="Debug Copy File Name: $(PluginDebugCopyFileName)" Importance="high" Condition="'$(PluginDebugCopyFileName)' != ''" />
	</Target>

	<Target Name="PostBuild" AfterTargets="ILRepacker" Condition="'$(Configuration)' == 'Debug'">
		<PropertyGroup>
			<PluginName Condition="'$(PluginDebugCopyFileName)' != ''">$(PluginDebugCopyFileName)</PluginName>
			<PluginName Condition="'$(PluginDebugCopyFileName)' == ''">$(MSBuildProjectName)</PluginName>
			<DestinationFolder>C:\ProgramData\Lidarr\plugins\$(PluginOwner)\$(PluginName)</DestinationFolder>
		</PropertyGroup>
		<Message Text="Debug Copy File Name: $(PluginDebugCopyFileName)" Importance="high" />
		<Message Text="Plugin Name: $(PluginName)" Importance="high" />
		<Message Text="Destination Folder: $(DestinationFolder)" Importance="high" />
		<MakeDir Directories="$(DestinationFolder)" />
		<Copy SourceFiles="$(TargetPath)" DestinationFiles="$(DestinationFolder)\$(PluginName).dll" SkipUnchangedFiles="true" />
		<Copy SourceFiles="$(TargetDir)$(TargetName).pdb" DestinationFiles="$(DestinationFolder)\$(PluginName).pdb" SkipUnchangedFiles="true" Condition="Exists('$(TargetDir)$(TargetName).pdb')" />
		<Copy SourceFiles="$(TargetDir)$(TargetName).deps.json" DestinationFiles="$(DestinationFolder)\$(PluginName).deps.json" SkipUnchangedFiles="true" Condition="Exists('$(TargetDir)$(TargetName).deps.json')" />
	</Target>

	<Import Project="$(MSBuildProjectDirectory)\Debug.targets" />
</Project>