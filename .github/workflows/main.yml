name: Build Plugin

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  # Detect branch from tag or reference
  branch-detection:
    uses: ./.github/workflows/branch-detection.yml
    with:
      github_ref: ${{ github.ref }}

  # Extract metadata from the project
  metadata:
    uses: ./.github/workflows/metadata.yml
    with:
      override_plugin_name: ''  # Set to empty to use repository name
  
  # Extract git-specific information
  git-info:
    uses: ./.github/workflows/git-info.yml
    with:
      tag_ref: ${{ github.ref }}
  
  # Setup .NET environment and submodules
  dotnet-setup:
    uses: ./.github/workflows/dotnet-setup.yml
    with:
      dotnet_version: '8.0.404'
      framework: ${{ needs.metadata.outputs.framework }}
    needs: [metadata]
  
  # Compile the project
  compilation:
    uses: ./.github/workflows/compilation.yml
    with:
      dotnet_version: '8.0.404'
      plugin_name: ${{ needs.metadata.outputs.plugin_name }}
      package_version: ${{ needs.metadata.outputs.package_version }}
      framework: ${{ needs.metadata.outputs.framework }}
      git_commit: ${{ needs.git-info.outputs.git_commit }}
      git_branch: ${{ needs.git-info.outputs.git_branch }}
      git_tag: ${{ needs.git-info.outputs.git_tag }}
      repo_url: ${{ needs.git-info.outputs.repo_url }}
      branch_repo_url: ${{ needs.git-info.outputs.branch_repo_url }}
      repo_owner: ${{ needs.git-info.outputs.repo_owner }}
      minimum_lidarr_version: ${{ needs.metadata.outputs.minimum_lidarr_version }}
    needs: [metadata, git-info, dotnet-setup]
  
  # Package the artifacts
  packaging:
    uses: ./.github/workflows/packaging.yml
    with:
      plugin_name: ${{ needs.metadata.outputs.plugin_name }}
      package_version: ${{ needs.metadata.outputs.package_version }}
      build_suffix: ${{ needs.metadata.outputs.build_suffix }}
      build_status: ${{ needs.compilation.outputs.build_status }}
    needs: [metadata, compilation]
  
  # Generate release notes
  release-notes:
    uses: ./.github/workflows/release-notes.yml
    with:
      plugin_name: ${{ needs.metadata.outputs.plugin_name }}
      package_version: ${{ needs.metadata.outputs.package_version }}
      build_suffix: ${{ needs.metadata.outputs.build_suffix }}
      minimum_lidarr_version: ${{ needs.metadata.outputs.minimum_lidarr_version }}
      commit_messages: ${{ needs.git-info.outputs.commit_messages }}
      git_commit: ${{ needs.git-info.outputs.git_commit }}
      branch_repo_url: ${{ needs.git-info.outputs.branch_repo_url }}
    needs: [metadata, git-info]
  
  # Publish the release
  publishing:
    uses: ./.github/workflows/publishing.yml
    with:
      plugin_name: ${{ needs.metadata.outputs.plugin_name }}
      package_version: ${{ needs.metadata.outputs.package_version }}
      build_suffix: ${{ needs.metadata.outputs.build_suffix }}
      is_prerelease: ${{ needs.metadata.outputs.is_prerelease }}
      is_latestrelease: ${{ needs.git-info.outputs.is_latestrelease }}
      release_notes_id: ${{ needs.release-notes.outputs.release_notes_id }}
      git_commit: ${{ needs.git-info.outputs.git_commit }}
      branch_repo_url: ${{ needs.git-info.outputs.branch_repo_url }}
    needs: [metadata, git-info, compilation, packaging, release-notes]
    if: needs.compilation.outputs.build_status == 'success'